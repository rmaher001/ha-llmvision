alias: Simple Package Detection
description: >-
  State-based package detection using structured output from multiple cameras.
  Detects package presence rather than activities.
triggers:
  - trigger: event
    event_type: dahua_event_received
    event_data:
      name: Front Full Camera
      Code: CrossLineDetection
      action: Start
      data:
        Name: Enter-Patio
        Direction: RightToLeft
        Object:
          Action: Appear
          ObjectType: Human
    id: person_approaching
  - trigger: event
    event_type: dahua_event_received
    event_data:
      name: Front Full Camera
      Code: CrossRegionDetection
      action: Start
      data:
        Direction: Leave
        Name: Door-Area
        Object:
          ObjectType: Human
    id: person_exiting_house
  - trigger: time_pattern
    hours: /1
    id: periodic_check
conditions:
  - condition: time
    after: "07:00:00"
    before: "22:00:00"
actions:
  - variables:
      check_time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      trigger_type: "{{ trigger.id }}"
  - action: llmvision.stream_analyzer
    data:
      remember: true
      use_memory: false
      max_frames: 6
      include_filename: true
      target_width: 1280
      max_tokens: 1000
      generate_title: false
      expose_images: false
      response_format: json
      provider: 01K4JMYCVPRJYJZ1Z37E79GQ57
      message: |2-
          Analyze these camera views for packages/deliveries and delivery personnel.
          Look for: 1) Boxes, envelopes, or delivery bags near the door or on the porch
          2) Delivery person in uniform (Amazon, UPS, FedEx, USPS, DHL) Identify carrier
          by uniform colors/logos if visible. Ignore residents, pets, plants, furniture,
          and decorations.
      image_entity:
        - camera.doorbell_clear
        - camera.front_side_camera_hd_stream_direct
        - camera.full_front_camera_main
      duration: 6
      min_frames_per_camera: 2
      structure: |2-
                {
                  "type": "object",
                  "properties": {
                    "package_present": {
                      "type": "boolean",
                      "description": "Is there a package/delivery visible?"
                    },
                    "confidence": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Confidence score"
                    },
                    "location": {
                      "type": "string",
                      "enum": ["door", "porch", "walkway", "none"],
                      "description": "Where is the package located?"
                    },
                    "package_count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Number of packages visible"
                    },
                    "delivery_person": {
                      "type": "boolean",
                      "description": "Is a delivery person visible?"
                    },
                    "carrier": {
                      "type": "string",
                      "enum": ["Amazon", "UPS", "FedEx", "USPS", "DHL", "Unknown", "None"],
                      "description": "Delivery carrier if identifiable"
                    },
                    "description": {
                      "type": "string",
                      "description": "Brief description of what is visible"
                    }
                  },
                  "required": ["package_present", "confidence", "location", "package_count", "delivery_person", "carrier", "description"],
                  "additionalProperties": false
                }
    response_variable: detection_result
  - variables:
      package_detected: >-
        {{ detection_result.structured_response.package_present | default(false)
        }}
      confidence: "{{ detection_result.structured_response.confidence | default(0) }}"
      location: "{{ detection_result.structured_response.location | default('none') }}"
      package_count: "{{ detection_result.structured_response.package_count | default(0) }}"
      delivery_person: >-
        {{ detection_result.structured_response.delivery_person | default(false)
        }}
      carrier: "{{ detection_result.structured_response.carrier | default('None') }}"
      description: >-
        {{ detection_result.structured_response.description | default('No
        packages detected') }}
      current_state: "{{ states('input_boolean.package_at_door') }}"
  - action: persistent_notification.create
    data:
      title: Package Detection Check
      message: >
        **Time:** {{ check_time }}

        **Trigger:** {{ trigger_type }}

        **Package Detected:** {{ 'Yes' if package_detected else 'No' }}

        **Confidence:** {{ (confidence * 100) | round(0) }}%

        **Location:** {{ location }}

        **Count:** {{ package_count }}

        **Delivery Person:** {{ 'Yes' if delivery_person else 'No' }}

        **Carrier:** {{ carrier }}

        **Description:** {{ description }}

        **Current State:** {{ current_state }}

        **State Change:** {{ 'Yes' if (package_detected and current_state ==
        'off') or (not package_detected and current_state == 'on') else 'No' }}
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ package_detected and confidence >= 0.7 }}"
          - condition: state
            entity_id: input_boolean.package_at_door
            state: "off"
        sequence:
          - action: input_boolean.turn_on
            target:
              entity_id: input_boolean.package_at_door
          - action: notify.persistent_notification
            data:
              title: >-
                ðŸ“¦ Package Delivered{% if carrier != 'None' and carrier !=
                'Unknown' %} - {{ carrier }}{% endif %}
              message: |
                {{ package_count }} package(s) detected at {{ location }}
                {% if carrier != 'None' %}Carrier: {{ carrier }}{% endif %}
                {% if delivery_person %}Delivery person seen{% endif %}
                {{ description }}
                Time: {{ check_time }}
          - action: notify.mobile_app_pixel_10_pro_fold
            data:
              title: >-
                ðŸ“¦ {% if carrier != 'None' and carrier != 'Unknown' %}{{ carrier
                }} {% endif %}Package Delivered
              message: >-
                {{ package_count }} package(s) at {{ location }}{% if
                delivery_person %} - delivery person seen{% endif %}
              data:
                tag: package_delivery
                importance: high
          - action: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.home_group
          - action: tts.cloud_say
            data:
              cache: false
              message: |
                {% if carrier != 'None' and carrier != 'Unknown' %}
                  {{ carrier }} package delivered at {{ location }}. {{ package_count }} package{{ 's' if package_count > 1 else '' }} detected.
                {% else %}
                  Package delivered at {{ location }}. {{ package_count }} package{{ 's' if package_count > 1 else '' }} detected.
                {% endif %}
            target:
              entity_id: media_player.home_group
      - conditions:
          - condition: template
            value_template: "{{ not package_detected and confidence >= 0.7 }}"
          - condition: state
            entity_id: input_boolean.package_at_door
            state: "on"
        sequence:
          - action: input_boolean.turn_off
            target:
              entity_id: input_boolean.package_at_door
          - action: notify.persistent_notification
            data:
              title: ðŸ“¦ Package Collected
              message: |
                Package has been picked up
                Time: {{ check_time }}
          - action: notify.mobile_app_pixel_10_pro_fold
            data:
              title: ðŸ“¦ Package Collected
              message: Package has been picked up from {{ location }}
              data:
                tag: package_pickup
                importance: default
          - action: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.home_group
          - action: tts.cloud_say
            data:
              cache: false
              message: Package has been picked up from {{ location }}.
            target:
              entity_id: media_player.home_group
mode: single
max_exceeded: silent
trace:
  stored_traces: 100
